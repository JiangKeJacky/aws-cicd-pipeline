version: 0.2

#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    commands:
      - sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories
      - apk add maven
      - apk add curl
      # - command
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
      - mvn -s settings.xml clean compile
      - mvn -s settings.xml -Dtest=com.mgiglione.service.test.unit.UnitTests test
      - mvn -s settings.xml -Dtest=com.mgiglione.service.test.integration.IntegrationTests test
      - nohup mvn -s settings.xml spring-boot:run & while ! nc -z localhost 8080; do echo 'waiting' && sleep 1; done; sleep 5; curl http://localhost:8080/manga/sync/Grand
      # - command
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
  #files:
    # - location
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths
